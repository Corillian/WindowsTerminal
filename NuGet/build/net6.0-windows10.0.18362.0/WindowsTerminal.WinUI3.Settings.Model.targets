<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<ItemGroup>
		<Content Include="$(MSBuildThisFileDirectory)..\..\ihatewinrt\win10-$(Platform)\native\Microsoft.Terminal.Settings.Model.dll">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<Visible>false</Visible>
		</Content>
		<!--<Content Include="$(MSBuildThisFileDirectory)..\..\ihatewinrt\win10-$(Platform)\native\Microsoft.Terminal.Settings.Model.pri">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<Visible>false</Visible>
		</Content>-->
		<Content Include="$(MSBuildThisFileDirectory)..\..\ihatewinrt\win10-$(Platform)\lib\net6.0-windows10.0.18362.0\Microsoft.Terminal.Settings.Model.Projection.dll">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<Visible>false</Visible>
		</Content>
	</ItemGroup>

	<!-- Why does the consuming project pull in the .pri for *every* architecture!? I hate C++/WinRT and NuGet so, so much. Nothing works right, the documentation sucks. -->
	<!--<Target Name="_FixWindowsTerminalWinUI3SettingsModelMUXPri" AfterTargets="RemoveDuplicatePriFiles" BeforeTargets="_ComputeInputPriFiles">
		<ItemGroup>
			<_WindowsTerminalWinUI3SettingsModelPriToBeRemoved Include="@(_PriFilesFromPayload)" Condition="'%(_PriFilesFromPayload.RuntimeIdentifier)' != 'win10-$(Platform)' And '%(_PriFilesFromPayload.NuGetPackageId)' == 'WindowsTerminal.WinUI3.Settings.Model'" />
			<_PriFilesFromPayload Remove="@(_WindowsTerminalWinUI3SettingsModelPriToBeRemoved)" />
		</ItemGroup>
	</Target>-->
</Project>